import{_ as e,o as a,c as t,O as n}from"./chunks/framework.a4d18f8e.js";const g=JSON.parse('{"title":"Dynamic Routes","description":"","frontmatter":{},"headers":[],"relativePath":"guide/dynamic-routes.md","filePath":"guide/dynamic-routes.md"}'),o={name:"guide/dynamic-routes.md"},s=n(`<h1 id="dynamic-routes" tabindex="-1">Dynamic Routes <a class="header-anchor" href="#dynamic-routes" aria-label="Permalink to &quot;Dynamic Routes&quot;">​</a></h1><p>When you don&#39;t know the exact segment names ahead of time and want to create routes from dynamic data, you can use Dynamic Segments that are filled in at request time.</p><h2 id="dynamic-routing" tabindex="-1">Dynamic Routing <a class="header-anchor" href="#dynamic-routing" aria-label="Permalink to &quot;Dynamic Routing&quot;">​</a></h2><p>Routes generated from file directories named with [] will be handled as dynamic routes. For example, the following file directory:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">└── routes</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── [id]</span></span>
<span class="line"><span style="color:#A6ACCD;">    │   └── page.tsx</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── contact</span></span>
<span class="line"><span style="color:#A6ACCD;">    │   └── page.tsx</span></span>
<span class="line"><span style="color:#A6ACCD;">    └── page.tsx</span></span></code></pre></div><p>The <code>pages/[id]/page.tsx</code> file will be converted to the <code>/:id</code> route. Except for the exact matching <code>/contact</code> route, all other <code>/xxx</code> routes will match this route.</p><p>In the component, you can use <a href="https://reactrouter.com/en/main/hooks/use-params" target="_blank" rel="noreferrer"><code>useParams</code></a> to get the corresponding named parameter.</p><p>In the loader, params will be passed as the input parameter of the <a href="https://reactrouter.com/en/main/route/loader#params" target="_blank" rel="noreferrer"><code>loader function</code></a>, and you can get the parameter value through <code>params.xxx</code>.<br> See more details in <a href="./data-fetching.html">Data Fetching</a>.</p><h2 id="dynamic-optional-routing" tabindex="-1">Dynamic Optional Routing <a class="header-anchor" href="#dynamic-optional-routing" aria-label="Permalink to &quot;Dynamic Optional Routing&quot;">​</a></h2><p>Routes generated from file directories named with <code>[$]</code> will be treated as dynamic optional routes. For example, the following file directory:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">└── routes</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── blog</span></span>
<span class="line"><span style="color:#A6ACCD;">    │   └── [id$]</span></span>
<span class="line"><span style="color:#A6ACCD;">    │       └── page.tsx</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── about</span></span>
<span class="line"><span style="color:#A6ACCD;">    │   └── page.tsx</span></span>
<span class="line"><span style="color:#A6ACCD;">    └── page.tsx</span></span></code></pre></div><p>The <code>pages/blog/[id$]/page.tsx</code> file will be converted to the <code>/blog/:id?</code> route. All routes under <code>/blog</code> will match this route, and the <code>id</code> parameter is optional. This route is usually used to distinguish between <strong>creation</strong> and <strong>editing</strong>.</p><p>Same as dynamic routing, you can use <a href="https://reactrouter.com/en/main/hooks/use-params" target="_blank" rel="noreferrer"><code>useParams</code></a> to get the corresponding named parameter. Loader function will also receive the parameter value through <code>params.xxx</code>.</p>`,13),r=[s];function i(l,c,p,d,u,m){return a(),t("div",null,r)}const y=e(o,[["render",i]]);export{g as __pageData,y as default};
